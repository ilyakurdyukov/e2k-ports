From 4bad2b0c9ba183d813f801f7f6709da8629526e3 Mon Sep 17 00:00:00 2001
From: Ilya Kurdyukov <jpegqs@gmail.com>
Date: Wed, 27 Aug 2025 14:16:35 +0700
Subject: [PATCH] qt6-base-6.9.1 e2k support

using LCC 1.29.14 and -mno-sse4.2
---
 cmake/QtCompilerFlags.cmake                      |  2 ++
 .../bindablesubscription/bindablesubscription.h  |  6 +++---
 mkspecs/features/toolchain.prf                   |  3 ++-
 .../double-conversion/double-conversion/utils.h  |  1 +
 src/corelib/global/archdetect.cpp                |  2 ++
 src/corelib/global/qcompilerdetection.h          | 16 +++++++++++++++-
 src/corelib/global/qnativeinterface.h            |  7 +++++++
 src/corelib/global/qnumeric_p.h                  |  2 +-
 src/corelib/global/qprocessordetection.h         |  9 +++++++++
 src/corelib/global/qsimd.cpp                     |  6 +++++-
 src/corelib/global/qsimd.h                       | 11 +++++++++++
 src/corelib/global/qsimd_p.h                     |  8 ++++----
 src/corelib/global/qversiontagging.h             |  3 +++
 src/corelib/kernel/qmetatype.h                   |  3 +++
 src/corelib/plugin/qelfparser_p.cpp              |  2 ++
 src/corelib/text/qbytearray.h                    |  3 +++
 src/corelib/text/qstringconverter.cpp            |  4 ++++
 src/corelib/thread/qfuture_impl.h                |  4 ++++
 src/corelib/thread/qyieldcpu.h                   |  5 +++++
 src/corelib/tools/qhash.h                        |  5 +++++
 src/gui/kernel/qplatformintegration.h            |  9 +++++++++
 src/gui/painting/qcolortrclut_p.h                |  6 ++++++
 src/gui/painting/qdrawhelper.cpp                 |  4 ++--
 src/gui/painting/qdrawhelper_p.h                 |  2 +-
 src/gui/platform/unix/qunixnativeinterface.cpp   | 15 +++++++++++++++
 .../xcb/gl_integrations/xcb_egl/qxcbeglcontext.h |  3 +++
 tests/auto/corelib/text/qlocale/tst_qlocale.cpp  |  2 ++
 .../auto/gui/painting/qpainter/tst_qpainter.cpp  |  2 +-
 28 files changed, 130 insertions(+), 15 deletions(-)

diff --git a/cmake/QtCompilerFlags.cmake b/cmake/QtCompilerFlags.cmake
index f58f36b7..eaa1150f 100644
--- a/cmake/QtCompilerFlags.cmake
+++ b/cmake/QtCompilerFlags.cmake
@@ -18,6 +18,8 @@ else()
     else()
         list(APPEND _qt_compiler_warning_flags_on -Wall -Wextra)
     endif()
+    # False warnings of this type from EDG frontend are very annoying. 
+    list(APPEND _qt_compiler_warning_flags_on -Wno-return-type)
 endif()
 
 set(_qt_compiler_warning_flags_condition
diff --git a/examples/corelib/bindableproperties/bindablesubscription/bindablesubscription.h b/examples/corelib/bindableproperties/bindablesubscription/bindablesubscription.h
index 03870d06..210583ca 100644
--- a/examples/corelib/bindableproperties/bindablesubscription/bindablesubscription.h
+++ b/examples/corelib/bindableproperties/bindablesubscription/bindablesubscription.h
@@ -34,9 +34,9 @@ private:
     int basePrice() const;
 
     BindableUser *m_user;
-    QProperty<Duration> m_duration { Monthly };
-    QProperty<int> m_price { 0 };
-    QProperty<bool> m_isValid { false };
+    QProperty<Duration> m_duration = QProperty<Duration>{ Monthly };
+    QProperty<int> m_price = QProperty<int>{ 0 };
+    QProperty<bool> m_isValid = QProperty<bool>{ false };
 };
 
 //! [bindable-subscription-class]
diff --git a/mkspecs/features/toolchain.prf b/mkspecs/features/toolchain.prf
index 13bf7f12..f8cf39d1 100644
--- a/mkspecs/features/toolchain.prf
+++ b/mkspecs/features/toolchain.prf
@@ -263,7 +263,8 @@ isEmpty($${target_prefix}.INCDIRS) {
                 }
             }
         }
-        if(!darwin:clang)|intel_icc {
+        arch = $$system("uname -m")
+        if(!darwin:clang)|intel_icc|equals(arch, e2k) {
             # Clang on a non-Apple system (that is, a system without ld64 -- say, with GNU ld
             # or gold under Linux) will not print any library search path. Need to use another
             # invocation with different options (which in turn doesn't print include search
diff --git a/src/3rdparty/double-conversion/double-conversion/utils.h b/src/3rdparty/double-conversion/double-conversion/utils.h
index 4f4dd71b..b2263a79 100644
--- a/src/3rdparty/double-conversion/double-conversion/utils.h
+++ b/src/3rdparty/double-conversion/double-conversion/utils.h
@@ -139,6 +139,7 @@ int main(int argc, char** argv) {
     defined(__ARMEL__) || defined(__avr32__) || defined(_M_ARM) || defined(_M_ARM64) || \
     defined(__hppa__) || defined(__ia64__) || \
     defined(__mips__) || \
+    defined(__e2k__) || \
     defined(__loongarch__) || \
     defined(__nios2__) || defined(__ghs) || \
     defined(__powerpc__) || defined(__ppc__) || defined(__ppc64__) || \
diff --git a/src/corelib/global/archdetect.cpp b/src/corelib/global/archdetect.cpp
index 6a1e110a..e963fa58 100644
--- a/src/corelib/global/archdetect.cpp
+++ b/src/corelib/global/archdetect.cpp
@@ -45,6 +45,8 @@
 #  define ARCH_PROCESSOR "riscv32"
 #elif defined(Q_PROCESSOR_RISCV_64)
 #  define ARCH_PROCESSOR "riscv64"
+#elif defined(Q_PROCESSOR_E2K)
+#  define ARCH_PROCESSOR "e2k"
 #elif defined(Q_PROCESSOR_S390_X)
 #  define ARCH_PROCESSOR "s390x"
 #elif defined(Q_PROCESSOR_S390)
diff --git a/src/corelib/global/qcompilerdetection.h b/src/corelib/global/qcompilerdetection.h
index 3d85f711..876ebe42 100644
--- a/src/corelib/global/qcompilerdetection.h
+++ b/src/corelib/global/qcompilerdetection.h
@@ -1196,6 +1196,16 @@
 #  define QT_WARNING_DISABLE_DEPRECATED         QT_WARNING_DISABLE_CLANG("-Wdeprecated-declarations")
 #  define QT_WARNING_DISABLE_FLOAT_COMPARE      QT_WARNING_DISABLE_CLANG("-Wfloat-equal")
 #  define QT_WARNING_DISABLE_INVALID_OFFSETOF   QT_WARNING_DISABLE_CLANG("-Winvalid-offsetof")
+#elif defined(__EDG__)
+#  define QT_WARNING_PUSH
+#  define QT_WARNING_POP                        QT_DO_PRAGMA(diag_default deprecated_entity_with_custom_message)
+#  define QT_WARNING_DISABLE_GCC(text)
+#  define QT_WARNING_DISABLE_CLANG(text)
+#  define QT_WARNING_DISABLE_INTEL(number)
+#  define QT_WARNING_DISABLE_MSVC(number)
+#  define QT_WARNING_DISABLE_DEPRECATED         QT_DO_PRAGMA(diag_suppress deprecated_entity_with_custom_message)
+#  define QT_WARNING_DISABLE_FLOAT_COMPARE
+#  define QT_WARNING_DISABLE_INVALID_OFFSETOF
 #elif defined(Q_CC_GNU) && (__GNUC__ * 100 + __GNUC_MINOR__ >= 406)
 #  define QT_WARNING_PUSH                       QT_DO_PRAGMA(GCC diagnostic push)
 #  define QT_WARNING_POP                        QT_DO_PRAGMA(GCC diagnostic pop)
@@ -1287,7 +1297,7 @@
 /*
     Sanitize compiler feature availability
 */
-#if !defined(Q_PROCESSOR_X86)
+#if !defined(Q_PROCESSOR_X86) && !defined(__e2k__)
 #  undef QT_COMPILER_SUPPORTS_SSE2
 #  undef QT_COMPILER_SUPPORTS_SSE3
 #  undef QT_COMPILER_SUPPORTS_SSSE3
@@ -1409,6 +1419,10 @@ static_assert(!std::is_convertible_v<std::nullptr_t, bool>,
 #else
 # define Q_CONSTINIT
 #endif
+#ifdef __EDG__
+#undef Q_CONSTINIT
+#define Q_CONSTINIT
+#endif
 
 #ifndef Q_OUTOFLINE_TEMPLATE
 #  define Q_OUTOFLINE_TEMPLATE
diff --git a/src/corelib/global/qnativeinterface.h b/src/corelib/global/qnativeinterface.h
index 89f33651..374c64cc 100644
--- a/src/corelib/global/qnativeinterface.h
+++ b/src/corelib/global/qnativeinterface.h
@@ -121,7 +121,14 @@ namespace QNativeInterface::Private {
     // Wrapper type to make the error message in case
     // of incompatible interface types read better.
     template <typename I>
+#ifdef __EDG__
+    struct NativeInterface : TypeInfo<I> {
+        template <typename BaseType>
+        static constexpr bool isCompatibleWith = TypeInfo<I>::template isCompatibleWith<BaseType>;
+    };
+#else
     struct NativeInterface : TypeInfo<I> {};
+#endif
 } // QNativeInterface::Private
 
 // Declares an accessor for the native interface
diff --git a/src/corelib/global/qnumeric_p.h b/src/corelib/global/qnumeric_p.h
index 47edc957..32b7a062 100644
--- a/src/corelib/global/qnumeric_p.h
+++ b/src/corelib/global/qnumeric_p.h
@@ -301,7 +301,7 @@ convertDoubleTo(double v, T *value, bool allow_precision_upgrade = true)
         return true;
     }
 
-#if defined(__SSE2__) && (defined(Q_CC_GNU) || __has_extension(gnu_asm))
+#if (defined(__SSE2__) && (defined(Q_CC_GNU) || __has_extension(gnu_asm))) && !defined(__e2k__)
     // The x86 CVTSD2SH instruction from SSE2 does what we want:
     // - converts out-of-range doubles to Â±infinity and sets #O
     // - converts underflows to zero and sets #U
diff --git a/src/corelib/global/qprocessordetection.h b/src/corelib/global/qprocessordetection.h
index f7298bbb..b5242281 100644
--- a/src/corelib/global/qprocessordetection.h
+++ b/src/corelib/global/qprocessordetection.h
@@ -280,6 +280,15 @@
 #  endif
 // Q_BYTE_ORDER not defined, use endianness auto-detection
 
+/*
+    Elbrus 2000 family.
+
+    Elbrus is little-endian.
+*/
+#elif defined(__e2k__)
+#  define Q_PROCESSOR_E2K
+#  define Q_BYTE_ORDER Q_LITTLE_ENDIAN
+
 /*
     RISC-V family, known variants: 32- and 64-bit
 
diff --git a/src/corelib/global/qsimd.cpp b/src/corelib/global/qsimd.cpp
index f1a1e5b1..5cfd58b0 100644
--- a/src/corelib/global/qsimd.cpp
+++ b/src/corelib/global/qsimd.cpp
@@ -111,7 +111,7 @@ static const char features_string[] =
 static const int features_indices[] = {
        0, 1, 6
 };
-#elif defined(Q_PROCESSOR_X86)
+#elif defined(Q_PROCESSOR_X86) || defined(__e2k__)
 #  include "qsimd_x86.cpp"                  // generated by util/x86simdgen
 #else
 static const char features_string[] = "";
@@ -622,7 +622,11 @@ static inline quint64 detectProcessorFeatures()
 #else
 static inline uint detectProcessorFeatures()
 {
+#ifdef __e2k__
+    return qCompilerCpuFeatures;
+#else
     return 0;
+#endif
 }
 #endif
 
diff --git a/src/corelib/global/qsimd.h b/src/corelib/global/qsimd.h
index 86af5b7d..1196ef78 100644
--- a/src/corelib/global/qsimd.h
+++ b/src/corelib/global/qsimd.h
@@ -114,6 +114,10 @@
 // Starting with /arch:AVX512, MSVC defines all the macros
 #endif
 
+#ifdef __e2k__
+#define Q_PROCESSOR_X86
+#endif
+
 #if defined(Q_PROCESSOR_X86) && defined(__SSE2__)
 #  include <immintrin.h>
 #  define QT_COMPILER_USES_sse2 1
@@ -139,6 +143,13 @@
 #  define QT_COMPILER_USES_sse4_1 -1
 #endif
 
+#ifdef __e2k__
+#undef Q_PROCESSOR_X86
+#undef __SSE4_2__
+#undef __AVX__
+#undef __AVX2__
+#endif
+
 #if defined(Q_PROCESSOR_X86) && defined(__SSE4_2__)
 #  define QT_COMPILER_USES_sse4_2 1
 #else
diff --git a/src/corelib/global/qsimd_p.h b/src/corelib/global/qsimd_p.h
index 6723c78f..0d2c0978 100644
--- a/src/corelib/global/qsimd_p.h
+++ b/src/corelib/global/qsimd_p.h
@@ -177,7 +177,7 @@ QT_WARNING_DISABLE_INTEL(103)
 #  undef __VAES__
 #endif
 
-#ifdef Q_PROCESSOR_X86
+#if defined(Q_PROCESSOR_X86) || defined(__e2k__)
 /* -- x86 intrinsic support -- */
 
 #  if defined(QT_COMPILER_SUPPORTS_RDSEED) && defined(Q_OS_QNX)
@@ -374,7 +374,7 @@ inline uint32x4_t qvsetq_n_u32(uint32_t a, uint32_t b, uint32_t c, uint32_t d)
 #endif
 #endif
 
-#ifndef Q_PROCESSOR_X86
+#if !defined(Q_PROCESSOR_X86) && !defined(__e2k__)
 enum CPUFeatures {
 #if defined(Q_PROCESSOR_ARM)
     CpuFeatureNEON          = 2,
@@ -439,7 +439,7 @@ extern "C" {
 #  define Q_ATOMIC(T)   _Atomic(T)
 #endif
 
-#ifdef Q_PROCESSOR_X86
+#if defined(Q_PROCESSOR_X86) || defined(__e2k__)
 typedef uint64_t QCpuFeatureType;
 static const QCpuFeatureType qCompilerCpuFeatures = _compilerCpuFeatures;
 static const QCpuFeatureType CpuFeatureArchHaswell = cpu_haswell;
@@ -452,7 +452,7 @@ Q_CORE_EXPORT uint64_t QT_MANGLE_NAMESPACE(qDetectCpuFeatures)();
 
 static inline uint64_t qCpuFeatures()
 {
-#ifdef QT_BOOTSTRAPPED
+#if defined(QT_BOOTSTRAPPED) || defined(__e2k__)
     return qCompilerCpuFeatures;    // no detection
 #else
     quint64 features = atomic_load_explicit(QT_MANGLE_NAMESPACE(qt_cpu_features), memory_order_relaxed);
diff --git a/src/corelib/global/qversiontagging.h b/src/corelib/global/qversiontagging.h
index fa2dd237..c1f886ef 100644
--- a/src/corelib/global/qversiontagging.h
+++ b/src/corelib/global/qversiontagging.h
@@ -109,6 +109,9 @@ struct QVersionTag
 #  ifdef Q_OS_DARWIN
 #    define QT_VERSION_TAG_SECTION      __attribute__((section("__DATA,.qtversion")))
 #  endif
+#  ifdef __EDG__
+#    define QT_VERSION_TAG_SECTION
+#  endif
 #  define QT_VERSION_TAG_ATTRIBUTE    __attribute__((visibility("hidden"), used))
 #  define QT_VERSION_TAG2(sym, imp)     \
     extern "C" Q_DECL_IMPORT const char sym; \
diff --git a/src/corelib/kernel/qmetatype.h b/src/corelib/kernel/qmetatype.h
index 6ee233d7..7ceab5f2 100644
--- a/src/corelib/kernel/qmetatype.h
+++ b/src/corelib/kernel/qmetatype.h
@@ -878,6 +878,9 @@ namespace QtPrivate
     {
         template<typename U>
         static auto check(U *) -> std::integral_constant<bool, sizeof(U) != 0>;
+#ifdef __EDG__
+        static auto check(void *) -> std::false_type;
+#endif
         static auto check(...) -> std::false_type;
         using type = decltype(check(static_cast<T *>(nullptr)));
     };
diff --git a/src/corelib/plugin/qelfparser_p.cpp b/src/corelib/plugin/qelfparser_p.cpp
index 78c9be0e..1a457d6e 100644
--- a/src/corelib/plugin/qelfparser_p.cpp
+++ b/src/corelib/plugin/qelfparser_p.cpp
@@ -145,6 +145,8 @@ struct ElfMachineCheck
             EM_SPARCV9
 #elif defined(Q_PROCESSOR_SPARC)
             EM_SPARC
+#elif defined(__e2k__)
+            EM_MCST_ELBRUS
 #elif defined(Q_PROCESSOR_WASM)
 #elif defined(Q_PROCESSOR_X86_32)
             EM_386
diff --git a/src/corelib/text/qbytearray.h b/src/corelib/text/qbytearray.h
index 552b3fa5..9cfcc413 100644
--- a/src/corelib/text/qbytearray.h
+++ b/src/corelib/text/qbytearray.h
@@ -524,6 +524,9 @@ private:
     Q_DECLARE_STRONGLY_ORDERED(QByteArray)
     Q_DECLARE_STRONGLY_ORDERED(QByteArray, QByteArrayView)
     Q_DECLARE_STRONGLY_ORDERED(QByteArray, const char *)
+#if defined(__EDG__) && __cplusplus >= 202002L
+    friend bool operator!=(QByteArray const &lhs, const char* const &rhs) noexcept(true) { return !(lhs == rhs); }
+#endif
 #if defined(__GLIBCXX__) && defined(__cpp_lib_three_way_comparison)
     // libstdc++ has a bug [0] when `operator const void *()` is preferred over
     // `operator<=>()` when calling std::less<> and other similar methods.
diff --git a/src/corelib/text/qstringconverter.cpp b/src/corelib/text/qstringconverter.cpp
index c496619c..872076ae 100644
--- a/src/corelib/text/qstringconverter.cpp
+++ b/src/corelib/text/qstringconverter.cpp
@@ -137,6 +137,7 @@ simdEncodeAscii(uchar *&dst, const char16_t *&nextAscii, const char16_t *&src, c
             return ~_mm256_movemask_epi8(nonAscii);
         };
 
+#ifndef __e2k__
         if constexpr (Cpu & CpuFeatureAVX512VL) {
             // with AVX512/AXV10, we always process everything
             if (sizeBytes <= Step * sizeof(char16_t)) {
@@ -155,6 +156,7 @@ simdEncodeAscii(uchar *&dst, const char16_t *&nextAscii, const char16_t *&src, c
                 return true;
             }
         }
+#endif
 
         if (sizeBytes >= Step * sizeof(char16_t)) {
             // do 32 characters at a time
@@ -301,6 +303,7 @@ simdDecodeAscii(char16_t *&dst, const uchar *&nextAscii, const uchar *&src, cons
             return R{ n1, n2, any };
         };
 
+#ifndef __e2k__
         if constexpr (Cpu & CpuFeatureAVX512VL) {
             // with AVX512/AXV10, we always process everything
             if (end - src <= Step) {
@@ -319,6 +322,7 @@ simdDecodeAscii(char16_t *&dst, const uchar *&nextAscii, const uchar *&src, cons
                 return true;
             }
         }
+#endif
 
         if (end - src >= Step) {
             // do 32 characters at a time
diff --git a/src/corelib/thread/qfuture_impl.h b/src/corelib/thread/qfuture_impl.h
index 2f709a56..1491b98c 100644
--- a/src/corelib/thread/qfuture_impl.h
+++ b/src/corelib/thread/qfuture_impl.h
@@ -891,7 +891,11 @@ namespace QtFuture {
 template<class Signal>
 using ArgsType = typename QtPrivate::ArgResolver<Signal>::AllArgs;
 
+#ifdef __EDG__
+template<class Sender, class Signal>
+#else
 template<class Sender, class Signal, typename = QtPrivate::EnableIfInvocable<Sender, Signal>>
+#endif
 static QFuture<ArgsType<Signal>> connect(Sender *sender, Signal signal)
 {
     using ArgsType = ArgsType<Signal>;
diff --git a/src/corelib/thread/qyieldcpu.h b/src/corelib/thread/qyieldcpu.h
index c30374f0..0b0e2224 100644
--- a/src/corelib/thread/qyieldcpu.h
+++ b/src/corelib/thread/qyieldcpu.h
@@ -18,6 +18,9 @@ extern "C"
 #  endif
 void _mm_pause(void);       // the compiler recognizes as intrinsic
 #endif
+#ifdef __e2k__
+#include <x86intrin.h>
+#endif
 
 QT_BEGIN_NAMESPACE
 
@@ -41,6 +44,8 @@ void qYieldCpu(void)
 #elif defined(Q_PROCESSOR_X86) && defined(Q_CC_GNU)
     // GCC < 10 didn't have __has_builtin()
     __builtin_ia32_pause();
+#elif defined(__e2k__)
+    _mm_pause();
 #elif defined(Q_PROCESSOR_X86) && defined(Q_CC_MSVC)
     _mm_pause();
 #elif defined(Q_PROCESSOR_X86)
diff --git a/src/corelib/tools/qhash.h b/src/corelib/tools/qhash.h
index e1aaccb6..f8a0149b 100644
--- a/src/corelib/tools/qhash.h
+++ b/src/corelib/tools/qhash.h
@@ -31,6 +31,11 @@ namespace QHashPrivate {
 template <typename T, typename = void>
 constexpr inline bool HasQHashOverload = false;
 
+#ifdef __EDG__
+template <typename T1, typename T2>
+constexpr inline bool HasQHashOverload<std::pair<T1, T2>> = true;
+#endif
+
 template <typename T>
 constexpr inline bool HasQHashOverload<T, std::enable_if_t<
     std::is_convertible_v<decltype(qHash(std::declval<const T &>(), std::declval<size_t>())), size_t>
diff --git a/src/gui/kernel/qplatformintegration.h b/src/gui/kernel/qplatformintegration.h
index a18ae821..77fa8a70 100644
--- a/src/gui/kernel/qplatformintegration.h
+++ b/src/gui/kernel/qplatformintegration.h
@@ -48,6 +48,13 @@ class QVulkanInstance;
 
 namespace QNativeInterface::Private {
 
+#ifdef __EDG__
+#define QInterfaceProxy_EDG(X, T, func) \
+    if (auto *iface = dynamic_cast<T*>(X)) \
+        return iface->func; \
+    return nullptr
+#endif
+
 template <typename R, typename I, auto func, typename... Args>
 struct QInterfaceProxyImp
 {
@@ -65,8 +72,10 @@ template <auto func>
 struct QInterfaceProxy;
 template <typename R, typename I, typename... Args, R(I::*func)(Args...)>
 struct QInterfaceProxy<func> : public QInterfaceProxyImp<R, I, func, Args...> {};
+#ifndef __EDG__
 template <typename R, typename I, typename... Args, R(I::*func)(Args...) const>
 struct QInterfaceProxy<func> : public QInterfaceProxyImp<R, I, func, Args...> {};
+#endif
 
 } // QNativeInterface::Private
 
diff --git a/src/gui/painting/qcolortrclut_p.h b/src/gui/painting/qcolortrclut_p.h
index da5e9e60..b54c289a 100644
--- a/src/gui/painting/qcolortrclut_p.h
+++ b/src/gui/painting/qcolortrclut_p.h
@@ -210,7 +210,13 @@ public:
     ushort m_unclampedToLinear = Resolution;
 
 private:
+#ifdef __EDG__
+public:
+#endif
     QColorTrcLut() = default;
+#ifdef __EDG__
+private:
+#endif
 
     static std::shared_ptr<QColorTrcLut> create();
 
diff --git a/src/gui/painting/qdrawhelper.cpp b/src/gui/painting/qdrawhelper.cpp
index 8aefba86..1f166ec0 100644
--- a/src/gui/painting/qdrawhelper.cpp
+++ b/src/gui/painting/qdrawhelper.cpp
@@ -6511,7 +6511,7 @@ DrawHelper qDrawHelper[] =
 
 static_assert(std::size(qDrawHelper) == QImage::NImageFormats);
 
-#if !defined(Q_PROCESSOR_X86) && !defined(QT_COMPILER_SUPPORTS_LSX)
+#if !defined(Q_PROCESSOR_X86) && !defined(Q_PROCESSOR_E2K) && !defined(QT_COMPILER_SUPPORTS_LSX)
 void qt_memfill64(quint64 *dest, quint64 color, qsizetype count)
 {
     qt_memfill_template<quint64>(dest, color, count);
@@ -6582,7 +6582,7 @@ void qt_memfill16(quint16 *dest, quint16 value, qsizetype count)
     qt_memfill32(reinterpret_cast<quint32*>(dest), value32, count / 2);
 }
 
-#if defined(Q_PROCESSOR_X86) || defined(QT_COMPILER_SUPPORTS_LSX)
+#if defined(Q_PROCESSOR_X86) ||  defined(Q_PROCESSOR_E2K) || defined(QT_COMPILER_SUPPORTS_LSX)
 void (*qt_memfill32)(quint32 *dest, quint32 value, qsizetype count) = nullptr;
 void (*qt_memfill64)(quint64 *dest, quint64 value, qsizetype count) = nullptr;
 #elif !defined(__ARM_NEON__) && !defined(__MIPS_DSP__)
diff --git a/src/gui/painting/qdrawhelper_p.h b/src/gui/painting/qdrawhelper_p.h
index ec60c52e..40663fd9 100644
--- a/src/gui/painting/qdrawhelper_p.h
+++ b/src/gui/painting/qdrawhelper_p.h
@@ -143,7 +143,7 @@ struct quint24 {
 
 void qBlendGradient(int count, const QT_FT_Span *spans, void *userData);
 void qBlendTexture(int count, const QT_FT_Span *spans, void *userData);
-#if defined(Q_PROCESSOR_X86) || defined(QT_COMPILER_SUPPORTS_LSX)
+#if defined(Q_PROCESSOR_X86) || defined(Q_PROCESSOR_E2K) || defined(QT_COMPILER_SUPPORTS_LSX)
 extern void (*qt_memfill64)(quint64 *dest, quint64 value, qsizetype count);
 extern void (*qt_memfill32)(quint32 *dest, quint32 value, qsizetype count);
 #else
diff --git a/src/gui/platform/unix/qunixnativeinterface.cpp b/src/gui/platform/unix/qunixnativeinterface.cpp
index 22914677..9e61203e 100644
--- a/src/gui/platform/unix/qunixnativeinterface.cpp
+++ b/src/gui/platform/unix/qunixnativeinterface.cpp
@@ -68,14 +68,24 @@ QT_DEFINE_PRIVATE_NATIVE_INTERFACE(QGLXIntegration);
 
 QOpenGLContext *QNativeInterface::QGLXContext::fromNative(GLXContext configBasedContext, QOpenGLContext *shareContext)
 {
+#ifdef __EDG__
+    QInterfaceProxy_EDG(QGuiApplicationPrivate::platformIntegration(),
+        QGLXIntegration, createOpenGLContext(configBasedContext, nullptr, shareContext));
+#else
     return QGuiApplicationPrivate::platformIntegration()->call<
         &QGLXIntegration::createOpenGLContext>(configBasedContext, nullptr, shareContext);
+#endif
 }
 
 QOpenGLContext *QNativeInterface::QGLXContext::fromNative(GLXContext visualBasedContext, void *visualInfo, QOpenGLContext *shareContext)
 {
+#ifdef __EDG__
+    QInterfaceProxy_EDG(QGuiApplicationPrivate::platformIntegration(),
+        QGLXIntegration, createOpenGLContext(visualBasedContext, visualInfo, shareContext));
+#else
     return QGuiApplicationPrivate::platformIntegration()->call<
         &QGLXIntegration::createOpenGLContext>(visualBasedContext, visualInfo, shareContext);
+#endif
 }
 #endif // QT_CONFIG(xcb_glx_plugin)
 
@@ -144,8 +154,13 @@ QT_DEFINE_PRIVATE_NATIVE_INTERFACE(QEGLIntegration);
 
 QOpenGLContext *QNativeInterface::QEGLContext::fromNative(EGLContext context, EGLDisplay display, QOpenGLContext *shareContext)
 {
+#ifdef __EDG__
+    QInterfaceProxy_EDG(QGuiApplicationPrivate::platformIntegration(),
+        QEGLIntegration, createOpenGLContext(context, display, shareContext));
+#else
     return QGuiApplicationPrivate::platformIntegration()->call<
         &QEGLIntegration::createOpenGLContext>(context, display, shareContext);
+#endif
 }
 #endif // QT_CONFIG(egl)
 
diff --git a/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglcontext.h b/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglcontext.h
index 1598da86..047b5c98 100644
--- a/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglcontext.h
+++ b/src/plugins/platforms/xcb/gl_integrations/xcb_egl/qxcbeglcontext.h
@@ -13,6 +13,9 @@ class QXcbEglContext : public QEGLPlatformContext
 {
 public:
     using QEGLPlatformContext::QEGLPlatformContext;
+#ifdef __EDG__
+    QXcbEglContext() {}
+#endif
     QXcbEglContext(const QSurfaceFormat &glFormat, QPlatformOpenGLContext *share, EGLDisplay display)
         : QEGLPlatformContext(glFormat, share, display, nullptr)
     {
diff --git a/tests/auto/corelib/text/qlocale/tst_qlocale.cpp b/tests/auto/corelib/text/qlocale/tst_qlocale.cpp
index a148f2d1..a60f2267 100644
--- a/tests/auto/corelib/text/qlocale/tst_qlocale.cpp
+++ b/tests/auto/corelib/text/qlocale/tst_qlocale.cpp
@@ -22,7 +22,9 @@
 
 #include <float.h>
 #include <math.h>
+#ifndef __e2k__
 #include <fenv.h>
+#endif
 
 #if defined(Q_OS_UNIX) && !defined(Q_OS_DARWIN)
 #    include <stdlib.h>
diff --git a/tests/auto/gui/painting/qpainter/tst_qpainter.cpp b/tests/auto/gui/painting/qpainter/tst_qpainter.cpp
index 575b4bb7..13481f69 100644
--- a/tests/auto/gui/painting/qpainter/tst_qpainter.cpp
+++ b/tests/auto/gui/painting/qpainter/tst_qpainter.cpp
@@ -2867,7 +2867,7 @@ void tst_QPainter::monoImages()
 
 #if defined(Q_OS_DARWIN) || defined(Q_OS_FREEBSD) || defined(Q_OS_ANDROID)
 #  define TEST_FPE_EXCEPTIONS
-#elif defined(__GLIBC__)
+#elif defined(__GLIBC__) && !defined(__e2k__)
 #  define TEST_FPE_EXCEPTIONS
 #elif defined(Q_OS_WIN) && defined(Q_CC_GNU)
 #  define TEST_FPE_EXCEPTIONS
-- 
2.43.0

