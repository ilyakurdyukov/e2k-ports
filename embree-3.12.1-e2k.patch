From 57960a1b9013cc04b884b0a0db698c23edbf1a5c Mon Sep 17 00:00:00 2001
From: Ilya Kurdyukov <jpegqs@gmail.com>
Date: Mon, 1 Feb 2021 17:05:18 +0700
Subject: [PATCH] embree-3.12.1 e2k support (2)

---
 CMakeLists.txt          | 18 +++++++++++++++++-
 common/math/vec2fa.h    |  2 +-
 common/math/vec3fa.h    |  4 ++--
 common/sys/intrinsics.h | 39 ++++++++++++++++++++++++++++++++++++++-
 common/sys/platform.h   |  7 +++++++
 common/sys/sysinfo.cpp  | 40 ++++++++++++++++++++++++++++++++++++++++
 6 files changed, 105 insertions(+), 5 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9eff884..6f18bb1 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -237,7 +237,23 @@ ELSE()
 ENDIF()
 SET_PROPERTY(CACHE EMBREE_MAX_ISA PROPERTY STRINGS NONE SSE2 SSE4.2 AVX AVX2 AVX512KNL AVX512SKX DEFAULT)
 
-IF (EMBREE_MAX_ISA STREQUAL "NONE")
+string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} CMAKE_SYSTEM_PROCESSOR_LC)
+IF(CMAKE_SYSTEM_PROCESSOR_LC STREQUAL "e2k" OR
+  CMAKE_SYSTEM_PROCESSOR_LC STREQUAL "elbrus")
+  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-reduced-alignment -Wno-sign-compare -mno-avx")
+  UNSET(EMBREE_ISA_SSE2 CACHE)
+  UNSET(EMBREE_ISA_SSE42 CACHE)
+  UNSET(EMBREE_ISA_AVX CACHE)
+  UNSET(EMBREE_ISA_AVX2 CACHE)
+  UNSET(EMBREE_ISA_AVX512KNL CACHE)
+  UNSET(EMBREE_ISA_AVX512SKX CACHE)
+  SET(EMBREE_ISA_SSE2 OFF)
+  SET(EMBREE_ISA_SSE42 ON)
+  SET(EMBREE_ISA_AVX OFF)
+  SET(EMBREE_ISA_AVX2 OFF)
+  SET(EMBREE_ISA_AVX512KNL OFF)
+  SET(EMBREE_ISA_AVX512SKX OFF)
+ELSEIF (EMBREE_MAX_ISA STREQUAL "NONE")
   TRY_COMPILE(COMPILER_SUPPORTS_AVX       ${CMAKE_BINARY_DIR} ${PROJECT_SOURCE_DIR}/common/cmake/check_isa.cpp COMPILE_DEFINITIONS ${FLAGS_AVX})
   TRY_COMPILE(COMPILER_SUPPORTS_AVX2      ${CMAKE_BINARY_DIR} ${PROJECT_SOURCE_DIR}/common/cmake/check_isa.cpp COMPILE_DEFINITIONS ${FLAGS_AVX2})
   TRY_COMPILE(COMPILER_SUPPORTS_AVX512KNL ${CMAKE_BINARY_DIR} ${PROJECT_SOURCE_DIR}/common/cmake/check_isa.cpp COMPILE_DEFINITIONS ${FLAGS_AVX512KNL})
diff --git a/common/math/vec2fa.h b/common/math/vec2fa.h
index 6b1b6f3..1a0dc95 100644
--- a/common/math/vec2fa.h
+++ b/common/math/vec2fa.h
@@ -230,7 +230,7 @@ namespace embree
   /// Euclidian Space Operators
   ////////////////////////////////////////////////////////////////////////////////
 
-#if defined(__SSE4_1__)
+#if defined(__SSE4_1__) && !defined(SLOW_DP_PS)
   __forceinline float dot ( const Vec2fa& a, const Vec2fa& b ) {
     return _mm_cvtss_f32(_mm_dp_ps(a,b,0x3F));
   }
diff --git a/common/math/vec3fa.h b/common/math/vec3fa.h
index 6576a15..b452807 100644
--- a/common/math/vec3fa.h
+++ b/common/math/vec3fa.h
@@ -264,7 +264,7 @@ namespace embree
   /// Euclidian Space Operators
   ////////////////////////////////////////////////////////////////////////////////
 
-#if defined(__SSE4_1__)
+#if defined(__SSE4_1__) && !defined(SLOW_DP_PS)
   __forceinline float dot ( const Vec3fa& a, const Vec3fa& b ) {
     return _mm_cvtss_f32(_mm_dp_ps(a.m128,b.m128,0x7F));
   }
@@ -629,7 +629,7 @@ namespace embree
   /// Euclidian Space Operators
   ////////////////////////////////////////////////////////////////////////////////
 
-#if defined(__SSE4_1__)
+#if defined(__SSE4_1__) && !defined(SLOW_DP_PS)
   __forceinline float dot ( const Vec3fx& a, const Vec3fx& b ) {
     return _mm_cvtss_f32(_mm_dp_ps(a.m128,b.m128,0x7F));
   }
diff --git a/common/sys/intrinsics.h b/common/sys/intrinsics.h
index 3f0619c..5813484 100644
--- a/common/sys/intrinsics.h
+++ b/common/sys/intrinsics.h
@@ -11,6 +11,20 @@
 
 #include <immintrin.h>
 
+#ifdef __e2k__
+#include <x86intrin.h>
+#ifndef __AVX2__
+#define __AVX2__ 1
+#define UNDEF_AVX2
+#endif
+
+#define _tzcnt_u32 __builtin_ctz
+#define _tzcnt_u64 __builtin_ctzll
+#define _lzcnt_u32 __builtin_clz
+#define _lzcnt_u64 __builtin_clzll
+#define __blsr_u64(v) ((v) & ((v)-1))
+#endif
+
 #if defined(__BMI__) && defined(__GNUC__) && !defined(__INTEL_COMPILER)
   #if !defined(_tzcnt_u32)
     #define _tzcnt_u32 __tzcnt_u32
@@ -201,7 +215,7 @@ namespace embree
                   : "0" (op1), "2" (op2)); 
   }
   
-#else
+#elif !defined(__e2k__)
   
   __forceinline void __cpuid(int out[4], int op) {
     asm volatile ("cpuid" : "=a"(out[0]), "=b"(out[1]), "=c"(out[2]), "=d"(out[3]) : "a"(op)); 
@@ -214,9 +228,14 @@ namespace embree
 #endif
   
   __forceinline uint64_t read_tsc()  {
+#ifdef __e2k__
+    unsigned aux;
+    return __rdtscp(&aux);
+#else
     uint32_t high,low;
     asm volatile ("rdtsc" : "=d"(high), "=a"(low));
     return (((uint64_t)high) << 32) + (uint64_t)low;
+#endif
   }
   
   __forceinline int bsf(int v) {
@@ -329,6 +348,14 @@ namespace embree
 #endif
   }
   
+#ifdef __e2k__
+  __forceinline int btc(int v, int i) { return v ^ (1 << (i & 31)); }
+  __forceinline int bts(int v, int i) { return v | (1 << (i & 31)); }
+  __forceinline int btr(int v, int i) { return v & ~(1 << (i & 31)); }
+  __forceinline size_t btc(size_t v, size_t i) { return v ^ (1ll << (i & 63)); }
+  __forceinline size_t bts(size_t v, size_t i) { return v | (1ll << (i & 63)); }
+  __forceinline size_t btr(size_t v, size_t i) { return v & ~(1ll << (i & 63)); }
+#else
   __forceinline int btc(int v, int i) {
     int r = 0; asm ("btc %1,%0" : "=r"(r) : "r"(i), "0"(v) : "flags" ); return r;
   }
@@ -352,12 +379,18 @@ namespace embree
   __forceinline size_t btr(size_t v, size_t i) {
     size_t r = 0; asm ("btr %1,%0" : "=r"(r) : "r"(i), "0"(v) : "flags"); return r;
   }
+#endif
 
   __forceinline int32_t atomic_cmpxchg(int32_t volatile* value, int32_t comparand, const int32_t input) {
     return __sync_val_compare_and_swap(value, comparand, input);
   }
   
 #endif
+
+#ifdef UNDEF_AVX2
+#undef UNDEF_AVX2
+#undef __AVX2__
+#endif
   
 ////////////////////////////////////////////////////////////////////////////////
 /// All Platforms
@@ -404,11 +437,15 @@ namespace embree
 
   __forceinline uint64_t rdtsc()
   {
+#ifdef __e2k__
+    return read_tsc();
+#else
     int dummy[4]; 
     __cpuid(dummy,0); 
     uint64_t clock = read_tsc(); 
     __cpuid(dummy,0); 
     return clock;
+#endif
   }
   
   __forceinline void pause_cpu(const size_t N = 8)
diff --git a/common/sys/platform.h b/common/sys/platform.h
index 96f9aab..a2a152e 100644
--- a/common/sys/platform.h
+++ b/common/sys/platform.h
@@ -23,6 +23,13 @@
 /// detect platform
 ////////////////////////////////////////////////////////////////////////////////
 
+#ifdef __e2k__
+#ifdef __LP64__
+#define __X86_64__
+#endif
+#define SLOW_DP_PS
+#endif
+
 /* detect 32 or 64 platform */
 #if defined(__x86_64__) || defined(__ia64__) || defined(_M_X64)
 #define __X86_64__
diff --git a/common/sys/sysinfo.cpp b/common/sys/sysinfo.cpp
index eb0a10e..2dbd737 100644
--- a/common/sys/sysinfo.cpp
+++ b/common/sys/sysinfo.cpp
@@ -77,6 +77,24 @@ namespace embree
 #endif
   }
 
+#ifdef __e2k__
+  std::string getCPUVendor()
+  {
+    return "MCST";
+  }
+
+  CPU getCPUModel()
+  {
+    return (CPU)__iset__;
+  }
+
+  std::string stringOfCPUModel(CPU model)
+  {
+    std::string str = "Elbrus V";
+    str += std::to_string((int)model);
+    return str;
+  }
+#else
   std::string getCPUVendor()
   {
     int cpuinfo[4]; 
@@ -187,6 +205,7 @@ namespace embree
     }
     return "Unknown CPU (error)";
   }
+#endif
 
   /* constants to access destination registers of CPUID instruction */
   static const int EAX = 0;
@@ -231,6 +250,26 @@ namespace embree
   /* cpuid[eax=7,ecx=0].ecx */
   static const int CPU_FEATURE_BIT_AVX512VBMI = 1 << 1;   // AVX512VBMI (vector bit manipulation instructions)
 
+#ifdef __e2k__
+  int getCPUFeatures()
+  {
+    /* cache CPU features access */
+    static int cpu_features = 0;
+    if (cpu_features)
+      return cpu_features;
+
+    cpu_features |= CPU_FEATURE_SSE;
+    cpu_features |= CPU_FEATURE_SSE2;
+    cpu_features |= CPU_FEATURE_SSE3;
+    cpu_features |= CPU_FEATURE_SSSE3;
+    cpu_features |= CPU_FEATURE_SSE41;
+    cpu_features |= CPU_FEATURE_SSE42;
+    cpu_features |= CPU_FEATURE_POPCNT;
+    cpu_features |= CPU_FEATURE_LZCNT;
+
+    return cpu_features;
+  }
+#else
   __noinline int64_t get_xcr0() 
   {
 #if defined (__WIN32__)
@@ -319,6 +358,7 @@ namespace embree
 
     return cpu_features;
   }
+#endif
 
   std::string stringOfCPUFeatures(int features)
   {
-- 
2.17.1

